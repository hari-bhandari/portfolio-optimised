{"ast":null,"code":"var _jsxFileName = \"/home/hari/WebstormProjects/portfolio-v2.0/src/Context/darkMode/DarkState.js\";\nimport React, { useReducer } from \"react\";\nimport darkContext from './darkContext';\nimport darkReducer from \"./darkReducer\";\nimport { TOGGLE_DARK_MODE } from \"../types\";\n\nconst DarkState = props => {\n  const initialState = {\n    darkMode: false\n  };\n  const [state, dispatch] = useReducer(darkReducer, initialState);\n\n  const setDarkMode = mode => {\n    dispatch({\n      type: TOGGLE_DARK_MODE,\n      payload: mode\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(darkContext.Provider, {\n    value: {\n      darkMode: state.darkMode,\n      setDarkMode\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, props.children);\n};\n\nexport default DarkState;","map":{"version":3,"sources":["/home/hari/WebstormProjects/portfolio-v2.0/src/Context/darkMode/DarkState.js"],"names":["React","useReducer","darkContext","darkReducer","TOGGLE_DARK_MODE","DarkState","props","initialState","darkMode","state","dispatch","setDarkMode","mode","type","payload","children"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAAQC,gBAAR,QAA+B,UAA/B;;AACA,MAAMC,SAAS,GAAEC,KAAD,IAAS;AACrB,QAAMC,YAAY,GAAC;AACfC,IAAAA,QAAQ,EAAC;AADM,GAAnB;AAGA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,UAAU,CAACE,WAAD,EAAaI,YAAb,CAApC;;AAEA,QAAMI,WAAW,GAAEC,IAAD,IAAQ;AACtBF,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAACT,gBADA;AAELU,MAAAA,OAAO,EAACF;AAFH,KAAD,CAAR;AAIH,GALD;;AAMA,sBACI,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AACzBJ,MAAAA,QAAQ,EAACC,KAAK,CAACD,QADU;AAEzBG,MAAAA;AAFyB,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIKL,KAAK,CAACS,QAJX,CADJ;AAQF,CApBF;;AAqBC,eAAeV,SAAf","sourcesContent":["import React, {useReducer} from \"react\";\nimport darkContext from './darkContext'\nimport darkReducer from \"./darkReducer\";\nimport {TOGGLE_DARK_MODE} from \"../types\";\nconst DarkState=(props)=>{\n    const initialState={\n        darkMode:false\n    }\n    const [state, dispatch] = useReducer(darkReducer,initialState);\n\n    const setDarkMode=(mode)=>{\n        dispatch({\n            type:TOGGLE_DARK_MODE,\n            payload:mode\n        })\n    };\n    return (\n        <darkContext.Provider value={{\n            darkMode:state.darkMode,\n            setDarkMode\n        }}>\n            {props.children}\n        </darkContext.Provider>\n    )\n }\n export default DarkState"]},"metadata":{},"sourceType":"module"}